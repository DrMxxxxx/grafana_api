version: 2

jobs:
  tests-3.7: &test-template
    working_directory: ~/grafana_api
    docker:
      - image: circleci/python:3.7
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout  # checkout source code to working directory
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: py-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ checksum "Pipfile" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
            pipenv install --dev
      - run: pipenv run coverage run --source grafana_api -m xmlrunner discover -o test-reports
      - run: pipenv run codecov
      - save_cache:
          key: py-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ checksum "Pipfile" }}
          paths:
            - ".venv"
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  tests-3.6:
    <<: *test-template
    docker:
      - image: circleci/python:3.6
        environment:
          PIPENV_VENV_IN_PROJECT: true

  tests-2.7:
    <<: *test-template
    docker:
      - image: circleci/python:2.7
        environment:
          PIPENV_VENV_IN_PROJECT: true

  build:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: "Build package"
          command: |
            mkdir -p ./dist/
            export VERSION=$(git describe --abbrev=0 --tags)
            echo ${VERSION} > ./dist/VERSION
            export PREV_VERSION=$(git describe --tags --abbrev=0 ${VERSION}^)
            sed '/"'${VERSION}'"/,/"'${PREV_VERSION}'"/!d;/"'${PREV_VERSION}'"/q' CHANGELOG.md | tail -n+2 | head -n-3 > ./dist/CHANGELOG
            python setup.py sdist
            python setup.py bdist_wheel
      - persist_to_workspace:
          root: .
          paths:
            - dist

  publish-github-release:
    docker:
      - image: cibuilds/github:0.12
    steps:
      - attach_workspace:
          at: ./dist
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(<./dist/dist/VERSION)
            rm ./dist/dist/VERSION
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "$(<./dist/dist/CHANGELOG)" -delete ${VERSION} ./dist/dist/

workflows:
  version: 2
  main:
    jobs:
      - tests-3.7
      - tests-3.6
      - tests-2.7
      - build:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
      - publish-github-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
